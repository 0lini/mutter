<!-- ##### SECTION Title ##### -->
ClutterBehaviour

<!-- ##### SECTION Short_Description ##### -->


<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT ClutterBehaviour ##### -->
<para>

</para>


<!-- ##### ARG ClutterBehaviour:alpha ##### -->
<para>

</para>

<!-- ##### STRUCT ClutterBehaviourClass ##### -->
<para>
Class structure.
</para>

@parent_class: parent class
@alpha_notify: Override this virtual function when creating a new behaviour.
  The alpha notify virtual function is called each time the alpha value
  computed by the #ClutterAlpha object changes; in this virtual function
  you should update the properties driven by your behaviour for all the
  actors to which the behaviour applies.
@_clutter_behaviour1: 
@_clutter_behaviour2: 
@_clutter_behaviour3: 
@_clutter_behaviour4: 
@_clutter_behaviour5: 
@_clutter_behaviour6: 

<!-- ##### FUNCTION clutter_behaviour_apply ##### -->
<para>

</para>

@behave: 
@actor: 


<!-- ##### FUNCTION clutter_behaviour_remove ##### -->
<para>

</para>

@behave: 
@actor: 


<!-- ##### USER_FUNCTION ClutterBehaviourForeachFunc ##### -->
<para>
The function used to iterate on every #ClutterActor to which a behaviour
applies.
</para>

@behaviour: a #ClutterBehaviour
@actor: a #ClutterActor
@data: optional user data passed to this function


<!-- ##### FUNCTION clutter_behaviour_actors_foreach ##### -->
<para>

</para>

@behave: 
@func: 
@data: 


<!-- ##### FUNCTION clutter_behaviour_get_actors ##### -->
<para>

</para>

@behave: 
@Returns: 


<!-- ##### FUNCTION clutter_behaviour_get_n_actors ##### -->
<para>

</para>

@behave: 
@Returns: 


<!-- ##### FUNCTION clutter_behaviour_get_nth_actor ##### -->
<para>

</para>

@behave: 
@num: 
@Returns: 


<!-- ##### FUNCTION clutter_behaviour_get_alpha ##### -->
<para>

</para>

@behave: 
@Returns: 


<!-- ##### FUNCTION clutter_behaviour_set_alpha ##### -->
<para>

</para>

@behave: 
@alpha: 


