<!-- ##### SECTION Title ##### -->
ClutterAlpha

<!-- ##### SECTION Short_Description ##### -->


<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#ClutterBehaviour, #ClutterTimeline
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT ClutterAlpha ##### -->
<para>
The #ClutterAlpha structure contains only private data and should not be
accessed directly.
</para>


<!-- ##### ARG ClutterAlpha:alpha ##### -->
<para>

</para>

<!-- ##### ARG ClutterAlpha:timeline ##### -->
<para>

</para>

<!-- ##### STRUCT ClutterAlphaClass ##### -->
<para>

</para>

@parent_class: 
@_clutter_alpha_1: 
@_clutter_alpha_2: 
@_clutter_alpha_3: 
@_clutter_alpha_4: 
@_clutter_alpha_5: 

<!-- ##### FUNCTION clutter_alpha_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION clutter_alpha_new_full ##### -->
<para>

</para>

@timeline: 
@func: 
@data: 
@destroy: 
@Returns: 


<!-- ##### FUNCTION clutter_alpha_get_alpha ##### -->
<para>

</para>

@alpha: 
@Returns: 


<!-- ##### MACRO CLUTTER_ALPHA_MAX_ALPHA ##### -->
<para>
Maximum value of the alpha function.  You should use this value to
scale the computed alpha value.
</para>



<!-- ##### USER_FUNCTION ClutterAlphaFunc ##### -->
<para>
The alpha function is a function of time.  You should provide a function
transforming the current position in the timeline.
</para>

@alpha: a #ClutterAlpha
@user_data: optional user defined data passed to the function
@Returns: a value between 0 and CLUTTER_ALPHA_MAX_ALPHA


<!-- ##### FUNCTION clutter_alpha_set_func ##### -->
<para>

</para>

@alpha: 
@func: 
@data: 
@destroy: 


<!-- ##### FUNCTION clutter_alpha_set_timeline ##### -->
<para>

</para>

@alpha: 
@timeline: 


<!-- ##### FUNCTION clutter_alpha_get_timeline ##### -->
<para>

</para>

@alpha: 
@Returns: 


<!-- ##### STRUCT ClutterSmoothstep ##### -->
<para>
Represents minimum and maximum thresholds for the smoothstep function. The
thresholds are values from &lt;0,1&gt; relative to the frame-length of the behaviour,
i.e., if the behaviour consists of 60 frames, threshold of 0.25 corresponds to
frame 15, and threshold of 1.0 to frame 60.
</para>

@min: lower threshold; a #ClutterFixed value from &lt;0,1&gt;
@max: upper threshold; a #ClutterFixed value from &lt;0,1&gt;

<!-- ##### FUNCTION clutter_smoothstep_copy ##### -->
<para>

</para>

@smoothstep: 
@Returns: 


<!-- ##### FUNCTION clutter_smoothstep_free ##### -->
<para>

</para>

@smoothstep: 


<!-- ##### MACRO CLUTTER_ALPHA_RAMP_INC ##### -->
<para>
Symbolic name for passing clutter_ramp_inc_func().
</para>



<!-- ##### FUNCTION clutter_ramp_inc_func ##### -->
<para>

</para>

@alpha: 
@dummy: 
@Returns: 


<!-- ##### MACRO CLUTTER_ALPHA_RAMP_DEC ##### -->
<para>
Symbolic name for passing clutter_ramp_dec_func().
</para>



<!-- ##### FUNCTION clutter_ramp_dec_func ##### -->
<para>

</para>

@alpha: 
@dummy: 
@Returns: 


<!-- ##### MACRO CLUTTER_ALPHA_RAMP ##### -->
<para>
Symbolic name for passing clutter_ramp_func().
</para>



<!-- ##### FUNCTION clutter_ramp_func ##### -->
<para>

</para>

@alpha: 
@dummy: 
@Returns: 


<!-- ##### MACRO CLUTTER_ALPHA_SINE ##### -->
<para>
Symbolic name for passing clutter_sine_func().
</para>



<!-- ##### FUNCTION clutter_sine_func ##### -->
<para>

</para>

@alpha: 
@dummy: 
@Returns: 


<!-- ##### MACRO CLUTTER_ALPHA_SQUARE ##### -->
<para>

</para>



<!-- ##### FUNCTION clutter_square_func ##### -->
<para>

</para>

@alpha: 
@dummy: 
@Returns: 


<!-- ##### MACRO CLUTTER_ALPHA_SMOOTHSTEP ##### -->
<para>

</para>



<!-- ##### FUNCTION clutter_smoothstep_func ##### -->
<para>

</para>

@alpha: 
@data: 
@Returns: 


